---
layout: post
title: "在这里,读懂区块链"
date: 2018-09-18 15:08:00 +0800
comments: true
categories: blockchain 
---

读懂区块链——仅需这一篇。(草稿，内容整理中...)

<!-- more -->

* 目录
{:toc}

# 前言

撰写这篇文章的原因，一是想向对不了解区块链的同学介绍下这项技术，二也是借机进行一次知识梳理,所以，有理解错误的地方，也希望读者不吝指正。

**对于读者群**:

因为有的读者是非技术类的，所以我将内容拆分成入门和进阶两部分,在入门篇里我尽量不涉及计算机技术术语，其细节我会放到进阶篇；同时，我也不希望进阶篇变成学术论文，所以进阶篇里会从逻辑层面解释原理，不会涉及数学公式,我并不希望读者睡着了。

所以,不想了解技术细节的同学，读完入门篇就够了;而对于有进一步探索欲望的同学，进阶篇也有足够指向作用了。

**链种**:

目前区块链分为公链、联盟链、私链，本文主要介绍公链，并稍微提及联盟链，不会涉及私链。

废话不多说, let's start now.

# 入门篇

## 什么是区块链?

我想每个人第一次听到区块链这三个字的时候，第一反应都是本能地问出:区块链是什么? **What**永远是人类认识事物的第一步,那么怎么回答这个问题呢。其实无论是回答什么"去中心化的信任机制"还是"分布式账本"，我相信听众脸上懵比的问号只会更大。所以我们尝试还原区块链产生的场景，了解这项技术产生的背景，从而回答它是什么。

### 场景

Clark是居住在大都会一个普通小伙子，他在星球日报勤勤恳恳地工作，把他辛苦挣来的钱都存入大都会银行，这家银行由大银行家Luthor筹建，是大都会最大最安全的银行,大都会居住的人们都喜欢把他们的资金存入这家银行，他们都信任这家银行，祖祖辈辈都离不开这家银行,Luthor确实也将银行经营得很好。

然而，不久后大都会发生了外星人入侵事件，所幸的是大都会人们还是挺过了这场灾难。不过大都会遭受了巨大的经济损失，经济发生萧条。这其中蒙受损失的，自然也包括大都会银行，Luthor为了维护自身的利益，不顾一切开始大量增发货币。这下Clark发现自己本就不多的存款变得一文不值，更为雪上加霜的是，灾后他去查自己的银行账户的时候，发现自己账户余额为零,而Luthor给Clark的解释是，入侵事件毁坏了银行部分数据，因而luthor无法恢复clark的财产，甚至也拒绝支付赔偿。

Clark听到这一切，无助地瘫倒在地，口中喃喃:这可是我攒来娶Louis的老本啊...

![clarkVSluthor](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/clark-luthor.jpg)

### 先找到问题

那么，Clark遇到的问题所在在哪儿呢？Clark找到好友Bruce,助他度过了当前难关，但是还是不知道怎么在同样情况下避免财务危机。这个时候，Bruce一针见血地指出了问题所在:

**中心化信任危机**

Luthor所代表的大都会银行，广义来讲就是中心化的权威机构。所有中心机构的用户，都是基于信任将资金托管给该机构，但是信任是不可靠的，一旦发生信任危机，中心化机构可以打破信任，对于银行来说可以不受限制地增发货币甚至直接侵吞私有财产。你可能会说有法律保护，但是这个时候其实是国家在为这个机构背书，国家机器充当了这个隐形的中心化信任载体。尽管国家违约成本比较高，但只要翻翻历史书，就会发现这样的案例也不在少数。

### 分析问题

既然找到问题所在，那么应该怎么设计新的解决方案呢？

#### 1. 去除中心化机构

如果问题出在中心化机构，那么很自然的就需要在我们的解决方案里移除对中心化机构的信任依赖。

那么我们就每个人都持有一个账本，并且每个账本初始数据都一模一样;比如是这样的一个账本:

```
Bruce inital 1
Clark inital 10000
...
```

一旦发生转账，比如Bruce要给Clark转账200，那么所有人都在账本上写上一句`Bruce transfer 200 to Clark`。 那么账本就变成了

```
Bruce inital 1
Clark inital 10000
...
Bruce transfer 200 to Clark
```

此时，如果我们想知道Clark的账户余额，只需要把和Clark相关的记账账目汇总即可得到`Balance(Clark) = 1 + 200 = 201`,这个结果不容任何人抵赖，因为你问大街上任意一个人，只要他打开他的账本，按同样的方法计算都可以得出Clark账户余额是201这个结果。

#### 2. 账户凭证问题

去除中心化之后，似乎我们的问题解决了。因为就算再次发生入侵，只要不是所有人的账本都损坏了，那么我们就可以找账本完好的人把之前的账目抄下来恢复自己的账本，从而恢复所有人的资产记录。

但是实际上没有那么简单，如果有人冒充Bruce要求转账给Clark,那么Bruce就在不知情的情况下被盗取了财产。所以，我们借鉴了现实生活中签名的办法，要求Bruce在转账的时候必须附加自己的签名，然后将这笔转账和签名一起广播出去。这样大家记账的时候就能验证，的确是Bruce本人要求的转账。

![bruce-sign](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/bruce-sign.png)

#### 3. 记账权

在我们新的解决方案里，我们需要交易发起人广播给其他所有记账人，实际上，这个广播不可能一瞬间将交易发给所有人。这个广播系统可以这样理解，假设我们都使用蓝牙协议作为通信基础，这个系统里每个人都使用蓝牙和身边十来个人保持连接，同理这些人和各自身边的人保持连接，这样所有人构成一个互联的网状结构。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/bluetooth-p2p.png)

因为交易信息传播有时间延迟，所以，同一时刻，系统里每个人收到的记账请求是不一样的。那么，我们一开始设计的所有人一起记账就行不通了，因为这样写到账本里的账目就不同了。为了大家写入同样的数据，必须能一起协调出统一的账目，然后写入。因为现在是一个大民主的社群，必须有一种投票机制选出一个记账人，这个记账人负责整理这段时间内收到的记账请求，并把这些账目一起写入账本;我们称之为争夺记账权。

那么，怎么设计这个记账权争夺机制呢？

* 首先必须要公平，不能因为某个记账人的社会地位高就能够拥有记账权；因为这样就会再次导致记账中心化，从而使得我们这个去中心化的解决方案失效
* 机制必须透明，机制的透明是对公平性的验证，我们的解决方案里必须能够让所有人能够验证这个公平性是否属实
* 筛选性，既然是记账权的争夺，这个机制必然具有强烈的优胜劣汰性质，否则达不到筛选出冠军的目的
* 冠军身份易于验证，就如同一场长跑，争夺冠军是非常艰难的，但是一旦夺得胜利，我们能一眼分辨出谁是冠军——谁戴着奖牌谁是冠军

明确了这个设计需求，我们留到求解问题时再进行解答。

但是基于我们这个设计，又带来了新的问题，如果记一次帐这么费劲，那肯定最后没人愿意记账了。中国有句老话说得好: 无利不起早，现实生活中大部分人的行为都是趋利的。所以，我们这个解决方案里，还差最后一环——经济激励。

如果我们这个解决方案里，大家约定，一旦某个天选之子夺得了记账权并成功记账，那么就给予他额外现金奖励，这个奖励足够补偿他这次辛苦记账的付出,这样，整个流程似乎就理顺了。


### 求解问题

在开始执行求解前，我们先复盘一下我们的思路，看看是否有思路不通畅的地方，防止出现逻辑漏洞。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/thoughts-flow.jpeg)

这是一条由问题驱动的推导型思路，主要是为了解决我们发现的中心化问题，在提出新的解决方案并解决新的衍生问题，主体上看来没有大的疏漏。

还有一开始我们遇到的两个问题，我们看看新的解决方案是否能解决:

第一，货币的增发问题

大都会银行作为中心化的机构，可以随意增发货币原因在于,它是货币的发行方，其他人无法拒绝或者阻止其增发行为。但是如果在新的解决方案里，我们将货币增发(其实就是这个争夺记账的经济奖励)的规则写入印刷到每个人账本的扉页，如果有个不诚实的记账者，在记账时私自增大自己的经济奖励，那么当他将自己写下的这页账目传播给别人时，其他人发现这个激励金额不符合扉页的激励规则，就会拒绝写入自己的账本，这样这个不诚实者因为其账目作弊，他的账本也成为废账，也就无法获得这部分"非法收入"了。

第二, 资产无法被篡改

首先，每个人的账户是无法被销毁的，因为要销毁账目记录，就意味着要修改所有人手里的账本，这几乎是不可能的。再者，只有自己签名的交易申请才会被记录入账本，其他人无法伪造自己的签名，从而也就无法篡改账本上别人的账目记录，换句话说，只有自己可以修改自己的账户余额，其他人试图更改别人的账户余额是一定会被拒绝入账的。

下面我们开始来求解遗留的记账争夺问题。

因为大都会市民极其不擅长数学，所以，我们使用求余来作为这场争夺的题目。比如每次记账，要求大家求解`x % 7 = 3`满足这个等式的`x`,因为大家数学很差，所以大家不得不一个一个数去尝试，当某个幸运儿最先发现`10 % 7 = 3`时，他就获取了记账权，而其他人将`x=10`带进算式很容易验算出这是符合条件的一个求解，所以大家也就表示认同，同时也认可了他的记账。于是所有人复制他记下的账目，并开始收集新的交易流水，准备下一次记账。


最后，我们将我们这个解决方案称之为"区块链"，这个解决方案里的很多做法其实就是真实区块链技术的简化版:

* 区块链; 我们的记账笔记薄就是一条区块链，这里面从前往后记录了所有人的所有账目流水，后面的账目对前面的账目有依赖关系
* 区块; 账本的每一页，可以称之为一个区块，页码可以认为是区块前后的索引关系
* 交易; 账本每一页的每一条都是一笔交易，这个交易可以是一笔简单转账，也可以是一次协定
* 数字签名; 还记得我们要求每笔交易发送时必须附加自己的签名吗？在数字世界里，我们必须附加自己的[数字签名](https://zh.wikipedia.org/wiki/%E6%95%B8%E4%BD%8D%E7%B0%BD%E7%AB%A0),这个签名甚至比真实世界的签名更可靠，它基于密码学，不可伪造且能唯一证明你的授权
* 挖矿; 我们的争夺记账权的过程，和矿工付出辛劳挖矿非常相似，所以也称之为挖矿了。不过真实的区块链挖矿使用的不是求余这么简单的运算，而是反解hash前缀0的暴力运算
* 矿工; 从事争夺记账权的节点(人)
* 虚拟货币; 不管是矿工挖矿得到的额外经济奖励，还是账本上记录的基本代数资产，都是这条区块链上的虚拟货币；比如比特币区块链上的虚拟货币就是BTC, 以太坊上的货币就是ETH
* 共识机制; 争夺记账权的机制就是共识机制，因为争夺机制的差异，目前有PoW,PoS等;目前久经考验的共识机制是PoW,我们大都会区块链的共识，也使得矿工付出大量脑力劳动，所以也可以称之为一种PoW

### 什么是区块链

回到最初的问题，什么是区块链: 

**区块链是在对等且不受信环境下, 达成共识保证群体协作的一种社群机制**

那么现在是时候看看真实世界的区块链是怎么样的了，自然，这得说说比特币了。下面小节主要取自中本聪的比特币白皮书。

#### 比特币

这里是中文版全文[比特币白皮书：一种点对点的电子现金系统](https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system)

##### 1. 交易

比特币里是这样组织交易的: 每一位所有者通过对前一次交易和下一位拥有者的公钥签署一个哈希数字签名，并将这个签名附加在交易的末尾，交易里包含的数字货币就发送给了下一位所有者。而收款人通过对签名进行检验，就能够验证该交易的合法性。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/btc-tx.png)

白皮书里面这个说法比较拗口。其实是这个意思，交易一定有多笔输入和至少一笔输出，上一笔交易的输出可以作为下一笔交易的输入，交易与交易直接就通过输入输出串联起来。而这个输入输出的本质，其实就是比特币资金的流动。

比如，现在A要给B转账4个比特币，那他要怎么构造这笔交易呢？A在自己钱包里找到一张"面值"为3的比特币和一张"面值"为1的比特币(这里的3和1的比特币其实就是A之前交易的两个输出)，于是A构造一笔交易，交易有两个输入:3、1这个两笔比特币，输出为4比特币，并且这个输出最终能够被B接受并花费。为了保证交易正确串联执行，所以A对B的公钥+交易本身数据做一次数字签名，并将签名附加在交易上，那么B就能对交易进行验证，达到获取这笔交易输出的母的，从而B也就获取了这4个比特币。

比特币里的这种交易设计还能巧妙地解决双花问题: 数字货币的交易说到底也就是一段二进制数据，如果把同样的数据连续发送两份，是不是就能够进行重复支付(double spend),达到"一分钱当两份钱"花了呢。在比特币系统里，因为交易的输入只能使用一次，当第一次交易被区块受理后，第二笔同样交易来到时，矿工发现这笔交易引用的输入已经被花费掉了，就会认为这是一笔非法交易而拒绝掉，所以是不会出现双花问题的。

##### 2. 工作量证明

比特币的共识使用了工作量证明(Proof of Work)来实现。

PoW的核心思想是使用反解哈希来达成共识。哈希函数输入一个任意长度的数据，输出一个长度固定且绝不雷同的值，可将其视为输入的数字指纹。对于特定输入，哈希的结果每次都一样，任何人都可以用相同的哈希函数，计算和验证哈希结果。一个加密哈希函数的主要特征就是不同的输入几乎不可能出现相同的数字指纹。因此，有意的选择一个输入去生成一个想要的哈希值值是几乎不可能的，更别提用随机的方式生成想要的哈希值了。

比特币使用SHA256算法，无论输入的大小是多少，SHA256函数的输出的长度总是256bit。

比如计算"I am Satoshi Nakamoto"的sha256哈希值，得到"5d7c7ba21cbbcd75d14800b100252d5b428e5b1213d27c385bc141ca6b47989e",改变原句中的任何一个字母、标点、或增加字母都会产生不同的哈希值,比如我们在原句"I am Satoshi Nakamoto"结尾加一个任意数字，得出的结果是完全没有规律的，不可能根据hash值反推出原句结尾加的是什么数字。

为了使这个哈希算法变得富有挑战，我们来设定一个具有任意性的目标：找到一个语句，使之哈希值的十六进制表示以0开头。幸运的是，这很容易尝试出语句 "I am Satoshi Nakamoto13"的哈希值是"0ebc56d59a34f5082aaef3d66b37a661696c2b618e62432727216ba9531041a5"，刚好满足条件。我们得到它用了13次。用概率的角度来看，如果哈希函数的输出是平均分布的，我们可以期望每16次得到一个以0开头的哈希值（十六进制个位数字为0到 F）。从数字的角度来看，我们要找的是小于 0x1000000000000000000000000000000000000000000000000000000000000000的哈希值。

我们称这个为Target目标阈值，我们的目的是找到一个小于这个目标的哈希值。如果我们减小这个目标值，那找到一个小于它的哈希值会越来越难。

简单打个比方，想象人们不断扔一对骰子以得到小于一个特定点数的游戏。第一局，目标是12。只要你不扔出两个6， 你就会赢。然后下一局目标为11。玩家只能扔10或更小的点数才能赢，不过也很简单。假如几局之后目标降低为了5。

现在有一半机率以上扔出来的骰子加起来点数会超过5，因此无效。随着目标越来越小，要想赢的话，扔骰子的次数会 指数级的上升。最终当目标为2时（最小可能点数），只有一个人平均扔36次或2%扔的次数中，他才能赢。从一个知道骰子游戏目标为2的观察者的角度来看，如果有人要成功中奖，假设他平均尝试了36次。

换句话说，可以估计从实现目标难度取得成功所需的工作量。 当算法是基于诸如SHA256的确定性函数时，输入本身就成为证据，必须要一定的工作量才能产生低于目标的结果。 因此，称之为工作量证明。

#### 智能合约

讲到区块链就不得不提智能合约,比特币系统里是没有智能合约的，智能合约是由以太坊带到大众视野里的概念，而反过来以太坊也因为这一创举成为区块链上的无冕之王(有冕的自然是比特币)。不过要提一点，以太坊只是将这个概念带进了现实，但是提出这一概念的并不是以太坊团队，而是1990s年代由尼克萨博提出，只是由于当时缺乏可信的执行环境无法得到应用。

那么智能合约是什么呢？智能合约本质是一段代码，在区块链这个公有环境上运行。

举个例子，如果Bruce和Clark打赌，如果明天下雨就给Clark转账100，那么Bruce可以在大都会区块链上提交这样一笔交易:

```
Bruce transfer 100 to Clark if it rains tomorrow
```

这笔交易就是一份智能合约，他发布到区块链上，这份合约就会冻结Bruce账户里100元到合约里,任何人不得篡改，并且这份合约也相当于受到所有人的监督执行。当第二天真的下雨时，Clark就可以收到Bruce输给他的100元，反之如果是个大晴天，那么Clark什么也得不到,bruce也可以解冻并收回这100元。

这个例子能够很直白描述智能合约的功能，但是实际上，区块链作为数字世界的产物，无法和现实世界产生可信关联，所以这种赌约基本上是无法在区块链上实现的。但是如果合约执行条件本身就来自数字世界，那就完全可信了，比如Bruce和Clark对赌的输赢都是由随机数决定。这也是为什么目前博彩类游戏在区块链上高歌猛进的原因。既满足了游戏策略的公平透明,又使得玩家的资金能可靠进出，同时由于数字签名的存在还具有一定的匿名性。

## 区块链能做什么?

区块链能做什么，就看看它是为了解决什么问题而诞生的就行了

#### 1. 需要去中心化

如果没有去中心化的强需求，那么他不需要区块链，一个中心化的权威组织在大部分情况下都能做得更好。

#### 2. 处于不受信环境下

如果是一个受信环境，更不需要区块链了，极有可能需要的仅仅是一个分布式数据库。这种场景下，一般是联盟链的工作环境。而且，受信环境下矿工可能本身就受雇于这个某个盈利性组织，所以经济激励也不需要了，所谓的无token区块链一般也是在这种环境下才能存活。

#### 3. 性能要求不高

这是区块链目前的现状导致的，也许未来就不存在了。因为存在出块竞争，所以目前公链都有性能问题，如果想基于区块链做一个电商系统，同时又想达到淘宝的交易承载量，那基本是不可能的。有个比较公认的说法，区块链是环保+性能+去中心化三者折衷的结果。

此外，要注意区块链的智能合约不能强依赖于现实世界，原因在于合约代码是明确的，而现实世界的定义是模糊的，即便能够做准确定义，那么将这个现实的信息注入到区块链里，目前除了引用一个权威机构的数据，也没有特别好的办法，所以这又回到要不要去中心化的问题了。

所以，目前看起来，纯线上业务比较适合区块链，比如金融和游戏。以太坊创始人V神在回答王峰十问时，就谈到了这个问题: [以太坊创始人V神在做客王峰十问时表示，金融业和游戏行业是最先应用区块链技术的两行业](http://tech.ifeng.com/a/20180622/45035376_0.shtm)

## 区块链不能做什么?

**真瓶装假酒**

我这个观点可能很多人不认同，因为区块链火起来之后，很多人开始做区块链溯源、区块链打车之类的事情，试图以区块链解决信任和防伪的问题。但是实际情况是，这些场景下的问题出在人身上，而不是自动化流程身上，区块链作为一项信息技术是解决不了这个问题的。

打个比方，有人目前在做红酒的区块链溯源防伪，整个流程上链是没有问题的，他做到了保证82年的拉菲的这个酒瓶的确是从产地直接送到顾客手里(甚至这一点都不能保证)，并不能保证酒瓶里就是拉菲而不是长城干红。为什么呢，因为如果我是最后一级经销商，我打开酒瓶喝了拉菲，然后换进去长城干红，然后保证完美重新包装，顾客除非拿到酒喝到嘴里，基本上是分辨不出来的。

这就是之前提到的，区块链无法辨别现实世界的问题。所以，区块链防伪是个伪命题，但是如果做溯源勉强还说得通，那么问题来了，仅仅是做溯源，哪个中心化的系统又做不到呢，如果硬要用区块链，也仅仅是把它作为一个分布式数据库来用罢了。

## 区块链生态

### 矿工节点

矿工只有挖矿才能完成记账，从区块链运行机制上来说，矿工节点记账就是区块链的源动力，它们的挖矿行为就是在保证区块链正常运作不宕机。

### 智能合约

智能合约并不是区块链上所必须的，比如比特币就没有。但是如果区块链想提供除转账外更多的可能，就必须要智能合约来实现了。尤其因为以太坊起了区块链2.0的头，后续新型公链里智能合约基本成为标配,成为驱动去中心化赋能的核心动力。

### SDK

很多情况下,SDK其实并未直接出现在用户面前，但它其实对生态的发展非常重要，SDK是和智能合约直接对话的工具。SDK是否成熟完善，是吸引开发者重要原因，区块链是社群烘托起来的工具，没有用户何来共识，但如果没有开发者来开发Dapp,又何来用户?

### DApp

公链是平台，平台建好了，需要在上面开发Dapp,有了百花齐放的Dapp,整个生态才能起来。

### 钱包

钱包是链的基本入口，目前众多公司在数字钱包上竞争，希望能成为区块链上的支付宝，可见钱包的重要性。

### 交易所

作为公链，必然产出虚拟货币。那么虚拟货币必然有个消耗的出口，直接作为支付手段进行消费是一种，另一种就是和法币进行直接或间接兑换。目前由于基础设施的不完善，中心化的交易所不论是规模和影响力都远远超过去中心化交易所，其对区块链施加的影响力甚至超过社群本身，所以某种程度来说，也挺讽刺的。

### 用户

用户位于生态最顶端，也是最重要的一环,所有的底层设施，都是为了吸引用户,用户多了又能反过来促进生态繁荣。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/block-ecosys.png)

## 几条著名公链

### BTC

开山鼻祖，区块链的信仰所在。比特币的出世打开了整个区块链的世界，它的存在已经成为了一种象征，寄托了大家对币/链圈的价值期望。所以比特币也成为了行业风向标，比特币行情的涨跌会直接影响其他虚拟货币的涨跌。

* 货币名称: BTC(比特币)
* 共识机制: PoW
* 创新点: 开山鼻祖，都是创新

### Ethereum

以太坊代表了区块链2.0，它将智能合约带进了现实，使得基于以太坊发放代币成为可能，直接引爆了ICO,促成了币圈第一波大浪潮。

* 货币名称: ETH(以太币)
* 共识机制: PoW -> PoA -> PoS,以太坊在逐渐从耗能污染的PoW切换到绿色环保的PoS
* 创新点: 第一条支持智能合约的公链

### EOS

被其粉丝冠名区块链3.0，实际上是个开历史倒车的产品，向币圈展示了项目方割韭菜的能力。

* 货币名称: EOS
* 共识机制: DPoS
* 创新点: 成功忽悠粉丝认可其独裁式治理，并冠之以民主立宪式社区治理; 另外TPS提升，我认为算不得是创新

# 进阶篇

## UTXO/Balance两种模型

现有的区块链基本都是基于UTXO/Balance两种模型之一构建而来，比特币采用了UTXO模型。

UTXO(Unspent Transaction Output)未消费交易输出，这是类似物理世界的纸币消费模型。在比特币系统中，每个交易输出就是一张比特币，这些比特币面值不一，并且无法拆分，就如同不能把100块人名币撕成两半当做两张50用一样。所以，如果用比特币买一杯2.7BTC的咖啡，你发现自己钱包里只有一张1btc和一张2btc比特币，那么只能把这两张BTC作为交易输入，这笔交易会产生两个输出，2.7btc付给商家，并且你会获得0.3btc的找零。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/utxo.png)

而Balance余额模型就是以太坊为代表的账户模型，它和刷银行卡消费是一样的，以太坊系统里有个字段专门记录用户的账户余额，交易时只要对这个余额字段做加减就行了。比如你还是买一杯2.7ETH的咖啡，购买时商家会直接收到你支付的2.7eth，整个消费过程不产生找零操作。

![blockchain](https://raw.githubusercontent.com/qjpcpu/qjpcpu.github.com/master/images/balance-model.jpg)

>P.S. 为了容易理解，举例都省略的交易手续费的描述。

## 分叉

## 共识机制

### POW

### POS

### DPOS

## 51%与双花

## P2P

## 联盟链

# 参考文献

* 精通比特币
